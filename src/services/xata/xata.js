// Generated by Xata Codegen 0.25.2. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "links",
    columns: [
      { name: "url", type: "text" },
      { name: "name", type: "text" },
      { name: "image", type: "text" },
      { name: "description", type: "text" },
      { name: "site_description", type: "text" },
      { name: "color", type: "text" },
      { name: "domain_id", type: "link", link: { table: "link_domains" } },
      { name: "clicks", type: "int", notNull: true, defaultValue: "0" },
      {
        name: "popularity_rating",
        type: "float",
        notNull: true,
        defaultValue: "0",
      },
    ],
    revLinks: [{ column: "link_id", table: "link_tags" }],
  },
  {
    name: "tags",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "synonyms", type: "text" },
    ],
    revLinks: [
      { column: "tag_id", table: "link_tags" },
      { column: "tag_id", table: "subtags" },
    ],
  },
  {
    name: "link_tags",
    columns: [
      { name: "link_id", type: "link", link: { table: "links" } },
      { name: "tag_id", type: "link", link: { table: "tags" } },
    ],
  },
  {
    name: "subtags",
    columns: [
      { name: "tag_id", type: "link", link: { table: "tags" } },
      { name: "name", type: "text" },
    ],
  },
  {
    name: "link_domains",
    columns: [{ name: "domain_name", type: "text" }],
    revLinks: [{ column: "domain_id", table: "links" }],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL: `${import.meta.env.VITE_XATA_DATABASE_URL}`, // edited
  enableBrowser: true, // added
  apiKey: import.meta.env.VITE_XATA_API_KEY, // added
  branch: import.meta.env.VITE_XATA_BRANCH, // added
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};

export default getXataClient;
